// This is auto-generated by unifying the hole:
//   ?uncycle : ∀x. ∃f. x == f (cycle x)
// It erases to the inverse of 'cycle', i.e.:
//   uncycle : Trit -> Trit
//   uncycle 0 = 2
//   uncycle 1 = 0
//   uncycle 2 = 1

uncycle
: ∀(x: Trit) (Exists ∀(x:Trit)Trit λf ∀(x:Trit) (Equal Trit x (f (cycle x))))
= λx
  (indeed 
    ∀(c:Trit)Trit
    λf∀(x:Trit)(Equal Trit x (f (cycle x)))
    λx (~x λx(Trit)
      ~λPλxλyλz(~trit2 P x y z)
      ~λPλxλyλz(~trit0 P x y z)
      ~λPλxλyλz(~trit1 P x y z))
    λx (~x λx ∀(c:∀(c:Trit) *) ∀(d:(c x))
      (c ((~(cycle x) λf Trit
        ~λPλxλyλz(~trit2 P x y z)
        ~λPλxλyλz(~trit0 P x y z)
        ~λPλxλyλz(~trit1 P x y z))))
      λP λx x
      λP λx x
      λP λx x))

